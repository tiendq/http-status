'use strict';

const http = require('http');

// Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
const HttpStatus = {
  OK: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  BadRequest: 400,
  Unauthorized: 401,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  URITooLong: 414,
  UnsupportedMediaType: 415,
  RequestedRangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HTTPVersionNotSupported: 505,
  NetworkAuthenticationRequired: 511
};

// Ref: https://nodejs.org/dist/latest-v12.x/docs/api/http.html#http_http_status_codes
const HttpStatusText = {
  OK: http.STATUS_CODES[HttpStatus.OK],
  Created: http.STATUS_CODES[HttpStatus.Created],
  Accepted: http.STATUS_CODES[HttpStatus.Accepted],
  NonAuthoritativeInformation: http.STATUS_CODES[HttpStatus.NonAuthoritativeInformation],
  NoContent: http.STATUS_CODES[HttpStatus.NoContent],
  ResetContent: http.STATUS_CODES[HttpStatus.ResetContent],
  PartialContent: http.STATUS_CODES[HttpStatus.PartialContent],
  MovedPermanently: http.STATUS_CODES[HttpStatus.MovedPermanently],
  Found: http.STATUS_CODES[HttpStatus.Found],
  SeeOther: http.STATUS_CODES[HttpStatus.SeeOther],
  NotModified: http.STATUS_CODES[HttpStatus.NotModified],
  BadRequest: http.STATUS_CODES[HttpStatus.BadRequest],
  Unauthorized: http.STATUS_CODES[HttpStatus.Unauthorized],
  Forbidden: http.STATUS_CODES[HttpStatus.Forbidden],
  NotFound: http.STATUS_CODES[HttpStatus.NotFound],
  MethodNotAllowed: http.STATUS_CODES[HttpStatus.MethodNotAllowed],
  NotAcceptable: http.STATUS_CODES[HttpStatus.NotAcceptable],
  ProxyAuthenticationRequired: http.STATUS_CODES[HttpStatus.ProxyAuthenticationRequired],
  RequestTimeout: http.STATUS_CODES[HttpStatus.RequestTimeout],
  Conflict: http.STATUS_CODES[HttpStatus.Conflict],
  Gone: http.STATUS_CODES[HttpStatus.Gone],
  LengthRequired: http.STATUS_CODES[HttpStatus.LengthRequired],
  PreconditionFailed: http.STATUS_CODES[HttpStatus.PreconditionFailed],
  PayloadTooLarge: http.STATUS_CODES[HttpStatus.PayloadTooLarge],
  URITooLong: http.STATUS_CODES[HttpStatus.URITooLong],
  UnsupportedMediaType: http.STATUS_CODES[HttpStatus.UnsupportedMediaType],
  RequestedRangeNotSatisfiable: http.STATUS_CODES[HttpStatus.RequestedRangeNotSatisfiable],
  ExpectationFailed: http.STATUS_CODES[HttpStatus.ExpectationFailed],
  UpgradeRequired: http.STATUS_CODES[HttpStatus.UpgradeRequired],
  PreconditionRequired: http.STATUS_CODES[HttpStatus.PreconditionRequired],
  TooManyRequests: http.STATUS_CODES[HttpStatus.TooManyRequests],
  InternalServerError: http.STATUS_CODES[HttpStatus.InternalServerError],
  NotImplemented: http.STATUS_CODES[HttpStatus.NotImplemented],
  BadGateway: http.STATUS_CODES[HttpStatus.BadGateway],
  ServiceUnavailable: http.STATUS_CODES[HttpStatus.ServiceUnavailable],
  GatewayTimeout: http.STATUS_CODES[HttpStatus.GatewayTimeout],
  HTTPVersionNotSupported: http.STATUS_CODES[HttpStatus.HTTPVersionNotSupported],
  NetworkAuthenticationRequired: http.STATUS_CODES[HttpStatus.NetworkAuthenticationRequired]
};

HttpStatus.Text = Object.freeze(HttpStatusText);

module.exports = Object.freeze(HttpStatus);
